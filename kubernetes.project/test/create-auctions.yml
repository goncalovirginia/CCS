config:
  target: 'http://20.13.66.99/rest'
  http:
    timeout: 300
  plugins:
    metrics-by-endpoint:
      useOnlyRequestNames: true
  processor: "./test-utils.js"
  variables:
    numAuctions : 30
    maxBids : 5 
    maxQuestions : 2
  phases:
  - name: "Create auctions"
    duration: 1
    arrivalCount: 1

scenarios:
  - name: 'Create auctions'
    weight: 1
    flow:
      - loop:                           
        - function: "selectUserSkewed"
        - post:                          
            url: "/user/auth"
            name: "POST:/user/auth"
            headers:
              Content-Type: application/json
            json:
              userId: "{{ user }}"
              pwd: "{{ pwd }}"
        - function: "genNewAuction"
        - post:                         
            url: "/media"
            name: "POST:/media"
            headers:
              Content-Type: application/octet-stream
              Accept: application/json
            beforeRequest: "uploadImageBody"
            capture: 
              regexp: "(.+)"
              as: "photoId"              
        - post:                          
            url: "/auction"
            name: "POST:/auction"
            headers:
              Content-Type: application/json
              Accept: application/json
            json:
              id: ""
              description: "{{ description }}"
              title: "{{ title }}"
              owner: "{{ user }}"
              photoId: "{{ photoId }}"
              endTime: "{{ endTime }}"
              minPrice: "{{ minimumPrice }}"
              status: "{{ status }}"
              winner: ""
              winningBid: 0
            capture:                     
              - json: $.id
                as: "auctionId"
              - json: $.owner
                as: "auctionUser"
        - loop:                         
          - function: "selectUserSkewed"
          - function: "genNewBid"
          - post:                         
              url: "/user/auth"
              name: "POST:/user/auth"
              headers:
                Content-Type: application/json
              json:
                userId: "{{ user }}"
                pwd: "{{ pwd }}"
          - post:               
              url: "/auction/{{ auctionId }}/bid"
              name: "POST:/auction/*/bid"
              headers:
                Content-Type: application/json
                Accept: application/json
              json:
                id: ""
                auction: "{{ auctionId }}"
                user: "{{ user }}"
                amount: "{{ value }}"
          count: "{{ numBids }}"   
        - loop:                    
          - function: "selectUserSkewed"
          - function: "genNewQuestion"
          - post:                         
              url: "/user/auth"
              name: "POST:/user/auth"
              headers:
                Content-Type: application/json
              json:
                userId: "{{ user }}"
                pwd: "{{ pwd }}"
          - post:                              
              url: "/auction/{{ auctionId }}/question"
              name: "POST:/auction/*/question"
              headers:
                Content-Type: application/json
                Accept: application/json
              json:
                id: ""
                auction: "{{ auctionId }}"
                user: "{{ user }}"
                text: "{{ text }}"
                answer: ""
              capture:                   
                - json: $.id
                  as: "questionId"
          - function: "genNewQuestionReply"
          - post:
              url: "/user/auth"
              name: "POST:/user/auth"
              headers:
                Content-Type: application/json
              json:
                userId: "{{ auctionUser }}"
                pwd: "{{ auctionUserPwd }}"
              ifTrue: "reply"
          - put:                          
              url: "/auction/{{ auctionId }}/question/{{ questionId }}/reply"
              name: "PUT:/auction/*/question/*/reply"
              headers:
                Content-Type: application/json
                Accept: application/json
              json:
                reply: "{{ reply }}"
              ifTrue: "reply"
          count: "{{ numQuestions }}"   
        count: "{{ numAuctions }}"

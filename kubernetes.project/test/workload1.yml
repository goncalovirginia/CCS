config:
  target: 'http://20.13.66.99/rest'
  http:
    timeout: 10
  plugins:
    metrics-by-endpoint:
      useOnlyRequestNames: true
  processor: "./test-utils.js"
  phases:
  - name: "Warm up"
    arrivalRate: 1         
    duration: 10
  - name: "Test"
    arrivalRate: 5         
    duration: 60

scenarios:
  - name: 'User checks own auctions'
    weight: 5
    flow:
      - function: "selectUserSkewed"
      - post:                       
          url: "/user/auth"
          name: "POST:/user/auth"
          headers:
            Content-Type: application/json
          json:
            user: "{{ user }}"
            pwd: "{{ pwd }}"
      - get:                       
          url: "/auction/owner/{{ user }}"
          name: "GET:/user/*/auctions"
          headers:
            Accept: application/json
          capture: 
            json: "$"
            as: "auctionsLst"
      - loop:                                  
        - get:                         
            url: "/media/{{ $loopElement.imageId }}"
            name: "GET:/media"
            headers:
              Accept: application/octet-stream
        - get:
            url: "/auction/{{ $loopElement.id }}/bid"
            name: "GET:/auction/*/bid"
            headers: 
              Accept: application/json
        - get:
            url: "/auction/{{ $loopElement.id }}/question"
            name: "GET:/auction/*/question"
            headers: 
              Accept: application/json
            capture: 
              json: "$"
              as: "questionOne"
        - function: "decideToReply"
        - post:                              
            url: "/auction/{{ $loopElement.id }}/question/{{ questionOne.id }}/reply"
            name: "ÂªPOST:/auction/*/question/*/reply"
            headers:
              Content-Type: application/json
              Accept: application/json
            json:
              reply: "{{ reply }}"
            ifTrue: "reply"
        over: "auctionsLst"

  - name: 'Mixed browsing'
    weight: 40
    flow:
      - function: "selectUserSkewed"
      - post:                   
          url: "/user/auth"
          name: "POST:/user/auth"
          headers:
            Content-Type: application/json
          json:
            user: "{{ user }}"
            pwd: "{{ pwd }}"
      - loop:                                  
        - function: "decideNextAction"
        - get:                        
            url: "/auction/owner/{{ user }}"
            name: "GET:/user/*/auctions"
            headers:
              Accept: application/json
            capture: 
              json: "$"
              as: "auctionsLst"
            ifTrue: "nextAction == 2"
        - post:                          
            url: "/media"
            name: "POST:/media"
            headers:
              Content-Type: application/octet-stream
              Accept: application/json
            beforeRequest: "uploadImageBody"
            capture: 
              regexp: "(.+)"
              as: "imageId"
            ifTrue: "nextAction == 3"
        - post:
            url: "/auction"
            name: "POST:/auction"
            headers:
              Content-Type: application/json
              Accept: application/json
            json:
              description: "{{ description }}"
              title: "{{ title }}"
              owner: "{{ user }}"
              imageId: "{{ imageId }}"
              endTime: "{{ endTime }}"
              minimumPrice: "{{ minimumPrice }}"
              status: "{{ status }}"
            ifTrue: "nextAction == 3"
        - get:                          
            url: "/media/{{ imageId }}"
            name: "GET:/media"
            headers:
              Accept: application/octet-stream
            ifTrue: "nextAction >= 4"
        - get:
            url: "/auction/{{ auctionId }}/bid" 
            name: "GET:/auction/*/bid"
            headers: 
              Accept: application/json
            capture: 
              json: "$"
              as: "bidsLst"
            ifTrue: "nextAction >= 4"
        - get:
            url: "/auction/{{ auctionId }}/question"
            name: "GET:/auction/*/question"
            headers: 
              Accept: application/json
            capture: 
              json: "$"
              as: "bidsLst"
            ifTrue: "nextAction >= 4"
        - function: "decideToCoverBid"
        - post: 
            url: "/auction/{{ auctionId }}/bid"
            name: "POST:/auction/*/bid"
            headers:
              Content-Type: application/json
              Accept: application/json
            json:
              auctionId: "{{ auctionId }}"
              user: "{{ user }}"
              value: "{{ value }}"
            ifTrue: "value and nextAction == 5"
        - post:
            url: "/auction/{{ auctionId }}/question"
            name: "POST:/auction/*/question"
            headers:
              Content-Type: application/json
              Accept: application/json
            json:
              auctionId: "{{ auctionId }}"
              user: "{{ user }}"
              text: "{{ text }}"
            ifTrue: "nextAction == 6"
        whileTrue: "random80"
